import { type NextRequest, NextResponse } from "next/server"
import { generateText } from "ai"
import { groq } from "@ai-sdk/groq"

export async function POST(request: NextRequest) {
  try {
    const { operation, detailed = false } = await request.json()

    const plannedProfit = operation.plannedProfit || 0
    const actualProfit = operation.actualProfit || 0
    const profitDifference = actualProfit - plannedProfit
    const profitDifferencePercent = plannedProfit !== 0 ? (profitDifference / Math.abs(plannedProfit)) * 100 : 0

    const duration =
      operation.endTime && operation.startTime
        ? Math.floor((new Date(operation.endTime).getTime() - new Date(operation.startTime).getTime()) / (1000 * 60))
        : 0

    const prompt = detailed
      ? `
    Voc√™ √© um especialista em an√°lise de trading quantitativo. Fa√ßa uma an√°lise DETALHADA da opera√ß√£o finalizada.

    üìä DADOS DA OPERA√á√ÉO:
    - Ativo: ${operation.symbol}
    - Dire√ß√£o: ${operation.direction}
    - Pre√ßo Entrada: $${operation.entryPrice}
    - Pre√ßo Sa√≠da: $${operation.exitPrice}
    - Stop Loss: $${operation.stopLoss}
    - Alavancagem: ${operation.leverage}x
    - Investimento: $${operation.investment}
    - Status: ${operation.status}
    - Dura√ß√£o: ${duration} minutos

    üí∞ AN√ÅLISE FINANCEIRA:
    - Lucro Planejado: $${plannedProfit.toFixed(2)}
    - Lucro Real: $${actualProfit.toFixed(2)}
    - Diferen√ßa: $${profitDifference.toFixed(2)} (${profitDifferencePercent.toFixed(1)}%)
    - Taxa de Sucesso IA: ${operation.successRate}%

    ü§ñ RECOMENDA√á√ÉO ORIGINAL DA IA:
    ${operation.aiRecommendation || "N√£o dispon√≠vel"}

    FORNE√áA UMA AN√ÅLISE COMPLETA SEGUINDO ESTE FORMATO:

    üéØ **RESULTADO DA OPERA√á√ÉO**: [SUCESSO/FALHA/PARCIAL]

    üìà **AN√ÅLISE DE PERFORMANCE**:
    ‚Ä¢ Precis√£o da IA: [X/10]
    ‚Ä¢ Execu√ß√£o vs Planejamento: [X/10]
    ‚Ä¢ Gest√£o de Risco: [X/10]
    ‚Ä¢ Timing de Entrada/Sa√≠da: [X/10]

    üîç **FATORES DE SUCESSO/FALHA**:
    [An√°lise detalhada dos fatores que contribu√≠ram para o resultado]

    üìä **LI√á√ïES APRENDIDAS**:
    [Insights espec√≠ficos desta opera√ß√£o]

    üöÄ **RECOMENDA√á√ïES FUTURAS**:
    [Sugest√µes para melhorar opera√ß√µes similares]

    üí° **AJUSTES SUGERIDOS**:
    [Modifica√ß√µes espec√≠ficas na estrat√©gia]

    üé≤ **SCORE FINAL**: [X]/100
    [Avalia√ß√£o geral da opera√ß√£o e aprendizados]
    `
      : `
    Analise rapidamente esta opera√ß√£o de trading finalizada:

    üìä OPERA√á√ÉO: ${operation.symbol} ${operation.direction}
    üí∞ Planejado: $${plannedProfit.toFixed(2)} | Real: $${actualProfit.toFixed(2)}
    ‚è±Ô∏è Dura√ß√£o: ${duration}min | Status: ${operation.status}

    Forne√ßa uma an√°lise CONCISA em 3-4 linhas sobre:
    1. Se a opera√ß√£o foi bem-sucedida
    2. Principal fator do resultado
    3. Uma li√ß√£o aprendida
    `

    const { text } = await generateText({
      model: groq("llama-3.3-70b-versatile"),
      prompt,
      maxTokens: detailed ? 1200 : 300,
      temperature: 0.3,
    })

    return NextResponse.json({
      analysis: text,
      metrics: {
        profitDifference,
        profitDifferencePercent,
        duration,
        success: actualProfit > 0,
        accuracyScore: Math.max(0, 100 - Math.abs(profitDifferencePercent)),
      },
    })
  } catch (error) {
    console.error("Erro na an√°lise da opera√ß√£o:", error)

    // Fallback analysis
    const operation = await request.json()
    const isSuccess = (operation.actualProfit || 0) > 0

    return NextResponse.json({
      analysis: `
${isSuccess ? "‚úÖ OPERA√á√ÉO BEM-SUCEDIDA" : "‚ùå OPERA√á√ÉO COM PREJU√çZO"}

üìä Resultado: ${isSuccess ? "Lucro" : "Preju√≠zo"} de $${Math.abs(operation.actualProfit || 0).toFixed(2)}
‚è±Ô∏è Dura√ß√£o: ${operation.duration || "N/A"}
üí° Li√ß√£o: ${isSuccess ? "Estrat√©gia funcionou conforme esperado" : "Mercado se moveu contra a posi√ß√£o"}

‚ö†Ô∏è An√°lise em modo fallback - Para an√°lise completa, verifique conex√£o com IA.
      `,
      metrics: {
        profitDifference: (operation.actualProfit || 0) - (operation.plannedProfit || 0),
        profitDifferencePercent: 0,
        duration: 0,
        success: isSuccess,
        accuracyScore: 50,
      },
    })
  }
}
